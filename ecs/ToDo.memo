Signatures:
	$ Compare Components and Tags
	$ Compare against std::bitset (SimpleSignature of an entity)
	- Compose With SignatureAnd, SignatureOr and SignatureNot
	-System Object
		$ Make it so that Systems<...>::SystemImage uses ecs::SystemImage<T> (built-in choice between the image and a container of it)
		$ Make system image constructible on demand
		- Find a syntax such that writing out the type of the system is not such a pain anymore (see r-type, where one needed to make the systemSpecs, than use decltype on the result of calling operator() with declvals of each argument)
			*First idea is make a templated type member in SystemSpecs in the form of SystemSpecs<..>::System<Settings>. Passing the manager at the construction of the system makes calling sysetms a lot less painful as well
		- Dependencies:
			. Systems may or may not depend on the actions and/or results of zero or more systems.
			. So long as in the end, an acyclic graph of dependencies can be computed, the end result would be that dependent
				systems should be only executed after their dependencies, and then have access to either their dependencies' images,
				or an output accessible through a variable/function returning the previously computed result
		- One time or persistent
	-Entity metadata
	- Multicolor tags/labels. `Black and White` tags are those that are only defined by whether they arre there or not in the bitset. Multicolor tags, on the other hand, are tags that are defined by both their presence and their value (as a constexpr enum). A use example would be any shooter/rpg, where rather than a tag IsMonster/IsPlayer/IsHuman, a colored label would make tags that are exclusive of each others
	- Overload an operator to add/remove tags
	- Overload an operator to add/remove component (default construction)
	- Replace all enable_if for add/remove/get/has component/tag y static asserts, for the sake of verbosity
	- overload comma operator of type_c so that juxtaposing them with commas makes a type_list
	-Make Signatures and type_lists constructible with instances of the types of the parameer packs, for template dedection
	-Instantiate class template and class instance of Manager with Settings and Systems